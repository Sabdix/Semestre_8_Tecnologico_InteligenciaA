/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolog;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author sabdi
 */
public class Interfaz extends javax.swing.JFrame {
    
    private ArrayList<Hijo_de> hijoDe;
    private ArrayList<Practica> practica;
    private ArrayList<Le_gusta> leGusta;
    private Procesa objProcesa;
    private File fichero;
    private FileReader fr;
    private FileWriter fw;
    private String sCadena;
    private BufferedReader bf;
    private BufferedWriter bw;
    private Date fecha;
    
    public Interfaz() {
        initComponents();
        hijoDe = new ArrayList<>();
        practica = new ArrayList<>();
        leGusta = new ArrayList<>();
        fecha = new Date();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jMenu1 = new javax.swing.JMenu();
        tfMensaje = new javax.swing.JTextField();
        btEnviar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        btCargar = new javax.swing.JMenuItem();
        btGuardar = new javax.swing.JMenuItem();
        btSalir = new javax.swing.JMenuItem();

        jTextField1.setText("jTextField1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfMensaje.setEditable(false);

        btEnviar.setText("OK");
        btEnviar.setEnabled(false);
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jMenu2.setText("Archivo");

        btCargar.setText("Cargar");
        btCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarActionPerformed(evt);
            }
        });
        jMenu2.add(btCargar);

        btGuardar.setText("Guardar");
        btGuardar.setEnabled(false);
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });
        jMenu2.add(btGuardar);

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });
        jMenu2.add(btSalir);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(tfMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEnviar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEnviar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        try {
            guardar();
            jTextArea.setText(fecha.toString() + " \"Archivo Guardado con Éxito\" ");
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            jTextArea.setText(fecha.toString() + " \"No se pudo guardar el archivo\" ");
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        try {
            this.finalize();
            this.dispose();
        } catch (Throwable ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btSalirActionPerformed

    private void btCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarActionPerformed
        cargar();
        this.btEnviar.setEnabled(true);
        this.btGuardar.setEnabled(true);
        this.tfMensaje.setEnabled(true);
        this.tfMensaje.setEditable(true);
    }//GEN-LAST:event_btCargarActionPerformed

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        if(objProcesa==null){
            JOptionPane.showMessageDialog(null, "Aun no se ha cargado el archivo");
            return;
        }
        
        jTextArea.setText(jTextArea.getText() + "\n" + objProcesa.ProcesarCadena(tfMensaje.getText()));
        tfMensaje.setText("");
    }//GEN-LAST:event_btEnviarActionPerformed

    private void cargar() {
        // Aquí se selecciona el archivo que se desea cargar
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.TXT", "txt");
        fc.setFileFilter(filtro);
        int seleccion = fc.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            fichero = fc.getSelectedFile();
            try {
                // Segun la seleccion leemos el archivo
                leerArchivo(fichero);
                jTextArea.setText(fecha.toString() + " \"Archivo Cargado con Éxito\" ");
                objProcesa = new Procesa(hijoDe, leGusta, practica);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea.setText(fecha.toString() + " \"No se encontró el archivo \"");
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea.setText(fecha.toString() +" \"Error en la lectura del Archivo\" ");
            }
        }
    }
    
    private void leerArchivo(File fichero) throws FileNotFoundException, IOException {
        // Aquí se lee el archivo para posterirmente agregarlos a los arreglos
        fr = new FileReader(fichero);
        bf = new BufferedReader(fr);
        // Se asegura que los arreglos esten vacios
        hijoDe.clear();
        practica.clear();
        leGusta.clear();
        String sCadena2[], sCadena3[];
        /*
            Se lee renglon por renglón, dividiendo cada renglon en donde encuentre
            un "(", con esto se divide el reglon en dos partes; la primera parte
            nos dice a que arreglo deberá ir la información, mientras que el
            segundo nos da la información que es necesario mandar al constructor
            de los objetos
        */
        while ((sCadena = bf.readLine()) != null) {
            sCadena2 = sCadena.split(Pattern.quote("("));
            sCadena3 = sCadena2[1].split(",");
            if (sCadena2[0].contains("Hijo_de")) {
                hijoDe.add(new Hijo_de(sCadena3[0], sCadena3[1].replace(")", "")));
            } else {
                if (sCadena2[0].contains("Practica")) {
                    practica.add(new Practica(sCadena3[0], sCadena3[1].replace(")", "")));
                } else {
                    if (sCadena2[0].contains("Le_gusta")) {
                        leGusta.add(new Le_gusta(sCadena3[0], sCadena3[1].replace(")", "")));
                    }
                }
            }
        }
    }
    
    private void guardar() throws IOException {
        this.hijoDe = objProcesa.getLstHijo();
        this.leGusta = objProcesa.getLstGusta();
        this.practica = objProcesa.getLstPractica();
        
        fw = new FileWriter(fichero);
        bw = new BufferedWriter(fw);
        
        for (int i=0; i<hijoDe.size(); i++) {
            bw.write(hijoDe.get(i).toString());
        }
        
        for (int i=0; i<practica.size(); i++) {
            bw.write(practica.get(i).toString());
        }
        
        for (int i=0; i<leGusta.size(); i++) {
            bw.write(leGusta.get(i).toString());
        }
        
        bw.close();
        fw.close();
    }
          
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btCargar;
    private javax.swing.JButton btEnviar;
    private javax.swing.JMenuItem btGuardar;
    private javax.swing.JMenuItem btSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField tfMensaje;
    // End of variables declaration//GEN-END:variables

}
